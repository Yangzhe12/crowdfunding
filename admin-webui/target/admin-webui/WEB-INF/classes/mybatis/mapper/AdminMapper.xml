<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xyz.yangzhe.crowd.mapper.AdminMapper">
    <resultMap id="BaseResultMap" type="xyz.yangzhe.crowd.entity.Admin">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">




    id, username, password, nickname, email, create_time







    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="xyz.yangzhe.crowd.entity.AdminExample">



        select



        <if test="distinct">



        distinct



        </if>
        <include refid="Base_Column_List"/>



        from account



        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">







      order by ${orderByClause}







        </if>
    </select>
    <select id="selectAdminByKeyword" resultMap="BaseResultMap">







        select id, username, password, nickname, email, create_time
        from account
        where
            username like concat("%", #{keyword}, "%") or
            nickname like concat("%", #{keyword}, "%") or
            email like concat("%", #{keyword}, "%")







    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">







    select







        <include refid="Base_Column_List"/>







    from account
    where id = #{id,jdbcType=INTEGER}







    </select>
    <delete id="deleteOLdRelationship" parameterType="java.lang.Integer">





    delete from account_role where admin_id=#{adminId}





    </delete>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">







    delete from account
    where id = #{id,jdbcType=INTEGER}







    </delete>
    <delete id="deleteByExample" parameterType="xyz.yangzhe.crowd.entity.AdminExample">







    delete from account







        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insertNewRelationship">




    insert into account_role(admin_id, role_id) values




        <foreach collection="roleIdList" item="roleId" separator=",">
            (#{adminId},#{roleId})
        </foreach>
    </insert>
    <insert id="insert" parameterType="xyz.yangzhe.crowd.entity.Admin">







    insert into account (id, username, password,
      nickname, email, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{nickname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}
      )







    </insert>
    <insert id="insertSelective" parameterType="xyz.yangzhe.crowd.entity.Admin">







    insert into account







        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,







            </if>
            <if test="username != null">







        username,







            </if>
            <if test="password != null">







        password,







            </if>
            <if test="nickname != null">







        nickname,







            </if>
            <if test="email != null">







        email,







            </if>
            <if test="createTime != null">







        create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},







            </if>
            <if test="username != null">







        #{username,jdbcType=VARCHAR},







            </if>
            <if test="password != null">







        #{password,jdbcType=VARCHAR},







            </if>
            <if test="nickname != null">







        #{nickname,jdbcType=VARCHAR},







            </if>
            <if test="email != null">







        #{email,jdbcType=VARCHAR},







            </if>
            <if test="createTime != null">







        #{createTime,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="xyz.yangzhe.crowd.entity.AdminExample"
            resultType="java.lang.Integer">







    select count(*) from account







        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">







    update account







        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},







            </if>
            <if test="record.username != null">







        username = #{record.username,jdbcType=VARCHAR},







            </if>
            <if test="record.password != null">







        password = #{record.password,jdbcType=VARCHAR},







            </if>
            <if test="record.nickname != null">







        nickname = #{record.nickname,jdbcType=VARCHAR},







            </if>
            <if test="record.email != null">







        email = #{record.email,jdbcType=VARCHAR},







            </if>
            <if test="record.createTime != null">







        create_time = #{record.createTime,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">







    update account
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR}







        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="xyz.yangzhe.crowd.entity.Admin">







    update account







        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},







            </if>
            <if test="password != null">







        password = #{password,jdbcType=VARCHAR},







            </if>
            <if test="nickname != null">







        nickname = #{nickname,jdbcType=VARCHAR},







            </if>
            <if test="email != null">







        email = #{email,jdbcType=VARCHAR},







            </if>
            <if test="createTime != null">







        create_time = #{createTime,jdbcType=VARCHAR},
            </if>
        </set>


    where id = #{id,jdbcType=INTEGER}


    </update>
    <update id="updateByPrimaryKey" parameterType="xyz.yangzhe.crowd.entity.Admin">


    update account
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}


    </update>
</mapper>