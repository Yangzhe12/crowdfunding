<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xyz.yangzhe.crowd.mapper.AuthorityMapper">
    <resultMap id="BaseResultMap" type="xyz.yangzhe.crowd.entity.Authority">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="category_id" property="categoryId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">


    id, name, title, category_id


    </sql>
    <select id="selectAssignedAuthIdByRoleId" resultType="int">


		select
		auth_id from role_auth where role_id=#{roleId}


    </select>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="xyz.yangzhe.crowd.entity.AuthorityExample">


    select


        <if test="distinct">


      distinct


        </if>
        <include refid="Base_Column_List"/>


    from authority


        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">


      order by ${orderByClause}


        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">


    select 


        <include refid="Base_Column_List"/>


    from authority
    where id = #{id,jdbcType=INTEGER}


    </select>
    <delete id="deleteOldRelationship">


		delete from role_auth where role_id=#{roleId}


    </delete>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">


    delete from authority
    where id = #{id,jdbcType=INTEGER}


    </delete>
    <delete id="deleteByExample" parameterType="xyz.yangzhe.crowd.entity.AuthorityExample">


    delete from authority


        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insertNewRelationship">

		insert into role_auth(auth_id,role_id) values

        <foreach collection="authIdList" item="authId" separator=",">
            (#{authId},#{roleId})
        </foreach>
    </insert>
    <insert id="insert" parameterType="xyz.yangzhe.crowd.entity.Authority">


    insert into authority (id, name, title, 
      category_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{categoryId,jdbcType=INTEGER})


    </insert>
    <insert id="insertSelective" parameterType="xyz.yangzhe.crowd.entity.Authority">


    insert into authority


        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,


            </if>
            <if test="name != null">


        name,


            </if>
            <if test="title != null">


        title,


            </if>
            <if test="categoryId != null">


        category_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},


            </if>
            <if test="name != null">


        #{name,jdbcType=VARCHAR},


            </if>
            <if test="title != null">


        #{title,jdbcType=VARCHAR},


            </if>
            <if test="categoryId != null">


        #{categoryId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="xyz.yangzhe.crowd.entity.AuthorityExample"
            resultType="java.lang.Integer">


    select count(*) from authority


        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">


    update authority


        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},


            </if>
            <if test="record.name != null">


        name = #{record.name,jdbcType=VARCHAR},


            </if>
            <if test="record.title != null">


        title = #{record.title,jdbcType=VARCHAR},


            </if>
            <if test="record.categoryId != null">


        category_id = #{record.categoryId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">


    update authority
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER}


        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="xyz.yangzhe.crowd.entity.Authority">


    update authority


        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},


            </if>
            <if test="title != null">


        title = #{title,jdbcType=VARCHAR},


            </if>
            <if test="categoryId != null">


        category_id = #{categoryId,jdbcType=INTEGER},
            </if>
        </set>


    where id = #{id,jdbcType=INTEGER}


    </update>
    <update id="updateByPrimaryKey" parameterType="xyz.yangzhe.crowd.entity.Authority">


    update authority
    set name = #{name,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}


    </update>
</mapper>